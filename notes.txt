PROJECT = custy app react and native, provider app react and native, admin app with 1 react app all on same api, manigod react app with 
manigod reg and pre-admin access, and admin interface

===============================================================================================================================================
 

CURRENT =>=>=>: 

        
    Migrations:

        add images (user and provider) and gallery (provider) endpoints in db

        providers: avatar necessary
        providers: list for work (optional)

        users: avatar (optional)

        use tbl.binary for this in schema
        write routes for above and comment heavy and test when get to fe
        

    __FE react user app!!!
   
       
        
         



        

        



    




================================================================================================================================================

TODO:


PROGRAMMATICS (tweaks to those features that are added already):


    API:
        notifications 24 hours before and 1 hour before appointments to provider and user

        google maps api for directions and showing where provider is on arrival time of appointments

        socket.io messageing for users and providers  with bot messages regarding upcoming appointments

        email/text notifications sent to all higher ups when anyone added to admin or manigods db

        Documentation



|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


    FRONT-END APPS:

        Validations needed from FE via yup:
        Signup:(see migrations)
        //will have to use something to validate these fields ie yup from frontend to make sure pw is certain legnth and has symbols lower upper and 1 num and zipcode


        Role MGMT:
        //Manigods UI app will be local only on manigods machines and accessed via the private repo that only I an d joseph have access too.  not deployed, 
        //NOTE FOR FE: when making admin interface do not enter password field for updating profiles, api does not allow that too

===============================================================================================================================================


PLANNING (possible future features not added in yet):

    services: mani pedi, waxing, hair, 

    Figure out if manigods use same interface as admin as well, or have a public manigods w special permissions that can not add to admin db and 
    do other super private tranactions on that ie option A: 2 interfaces 1 public; 1 private, or option B: just 1 private and then separate
     admin accounts (will for forseeable future not need the first option so can get done faster with option B)

    PAYMENT:
    //find a framework to handle this, but may need to delete that later

API to FE INTEGRATION:

    images: for images uploads use these sources, backend is done, but FE needs to be added and configured and be tested with it when done.  The 
    following 2 resources were used, and videos can be found too:
        https://www.npmjs.com/package/multer
        https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file


    Validation:
    use yup to make sure emails and zips are validated before requests go through for reg and anything else taht needs emeail or zip.

    RATINGS:
    may need to tweak the nullability of the ratings and rating ids later when we see the flow of how services are entered from front end when done 
    see line 70-72 user_ratingsRouter.js: the ids will come from where and the flow of the rating process to the user to rate the provider

    no lifetime rating database column/table, will compute the rating on a get call to the users/providers ratings and take the avg and post that to the fe,

    after you post the rating user_rating_id for the service needs to be updated in services by taking the id from user_ratings. (service id will be taken from a get by fe that will pull info on the service to 
    be rated for the rating screen and thus pre populated on the follow up put that will go through with the post see line 82 of userratingsRouter.js)

    ADMIN:
    may need to pull timestamps (created_at etc) in get calls and format that so admin can see when the profiles created etc.
 
    BOOKINGS AND SERVICES
    when making bookings (post see bookingsRouter line 56-57) userId will come from the users data, and provider_id will come from a screen where you click on the provider to book
    confirmations sent to provider upon user booking, when they click to confirm, the put will be called to change the tbl.boolean comfrimed to 1

    post will be used when the provider completes the service.  They will verify to end and then it will post to completed services, and then rating 
    notifications will go out to both user and provider (immediately to provider like uber does) see line 70-72 of servicesRouter.js

VERY END before deploy production:
    
    UNCOMMENT THE CHECKROLES MIDDLEWARE CALLS ON THE ROUTES

    prettify code

    DRY:
    in migrations maybe make a function for some of the redundant schemas if they stay the same ie admin and manigods before final implementation.  leave as is now for debugging,
    refactoring, and comments


===============================================================================================================================================

DEBUGGINGS:

     knex seed:run:
    _SEED Error: Error while executing "C:\Users\rosin\a_jProjects\maniPed\seeds\bookings.js" seed: truncate "future_bookings" restart identity - cannot truncate a table referenced in a 
    foreign key constraint
     may have to add created at in seeds if doesnt run, also knexfile configs were changed, adding seed dir and pool config
